@page "/weather"
@using FluentGridToolkit.Components
@using FluentGridToolkit
@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@* Provides the filter manager value for all the items in the grid *@
<CascadingValue Value="@filterManager">

    <FluentDataGrid Items="@filterManager.Data" ShowHover="true"
                    Pagination="@pagination"
                    ResizableColumns="true">
        <PropertyColumn Property="@(p => p.Date)" Title="Date" Format="yyyy-MM-dd" Sortable="true">
            <ColumnOptions>
                <div class="search-box">
                    <FluentGridDateRangeFilter Property="@(p => p.Date)"
                                               OnValueChanged="OnFilterChange" />
                </div>
            </ColumnOptions>
        </PropertyColumn>
        <PropertyColumn Property="@(p => p.TemperatureC)" Title="Temp. (C)" Format="N2" Align="Align.End" Sortable="true">
        </PropertyColumn>
        <PropertyColumn Property="@(p => p.TemperatureF)" Title="Temp. (F)" Format="N2" Align="Align.End" Sortable="true">
        </PropertyColumn>
        <PropertyColumn Property="@(p => p.Summary)" Title="Summary" Sortable="true">
            <ColumnOptions>
                <div class="search-box">
                    <FluentGridTextFilter Property="@(p => p.Summary)"
                                          IgnoreCase="true"
                                          OnValueChanged="OnFilterChange" />
                </div>
            </ColumnOptions>
        </PropertyColumn>
    </FluentDataGrid>

</CascadingValue>

<FluentPaginator State="@pagination" />

@code {
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
}
